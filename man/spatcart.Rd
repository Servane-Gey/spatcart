% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatcart.R
\name{spatcart}
\alias{spatcart}
\title{Spatial Classification Trees}
\usage{
spatcart(
  ypp,
  r,
  method = "deviance",
  ties = TRUE,
  offset = NULL,
  wt = NULL,
  parms = NULL,
  minsplit = 10,
  minleaf = 5,
  mindev = 0,
  graph = TRUE
)
}
\arguments{
\item{ypp}{bivariate marked spatial point process of class 'ppp' (see spatstat).}

\item{r}{initial resolution scale to use to construct spatcart maximal tree. Decreasing with splitting..}

\item{method}{optional. Parameter method = c("deviance", "misclass") sets the pruning method to use. "deviance" is related to class probability trees, while "misclass" is related to classical misclassification trees. Default is method = "deviance".}

\item{ties}{logical. If TRUE (default), in case of ties in splitting rule, the first split achieving maximum loss in impurity is taken. If FALSE, scale adaptation inside nodes is made to avoid ties.}

\item{offset}{parameter related to the tree() function of package tree.}

\item{wt}{vector of non-negative observational weights; fractional weights are allowed.}

\item{parms}{other parameters related to the tree function of package tree.}

\item{minsplit}{minimal size for the node to be split. Default is minsplit = 10.}

\item{minleaf}{minimal size of each resulting leaf for a node to be split. Default is minleaf = 5.}

\item{mindev}{minimal value of node impurety to control node splitting. Default is mindev = 0.}

\item{graph}{Logical. If TRUE (Default), plot the heatmaps associated to the point process y and optimal trees produced by spatcart.}
}
\value{
a list of objects containing the maximal, largest and smallest optimal trees; the sequence of pruned subtrees; the values of scale resolution and impurity inside nodes of the maximal tree.
}
\description{
Spatial Classification Trees using Ripley's intertype K-function to partition bivariate marked spatial point process, with pruning.
}
\details{
parameter minsplit must be at least 2xminleaf.
}
\examples{
library(spatcart)
library(spatstat)
# Simulate bivariate marked spatial point process
chess = damier(500, h=0.45, model="Poisson")
ypp = ppp(x=chess$data$x1,
y=chess$data$x2,
marks = chess$data$label,
range(chess$data$x1),
range(chess$data$x2))

# Checking initial resolution to construct maximal tree via Ripley's Kcross
major =  names(which.max(intensity(ypp)))
minor = names(which.min(intensity(ypp)))
K0=Kcross(ypp, major, minor, correction="none")

K01 = data.frame(
  r = K0$r,
  difference = K0$un-K0$theo
)

library(ggplot2)
DiffK = ggplot(K01, aes(x=r, y=difference))+geom_line()+xlab("r")+
  ylab("Kest - Ktheo")+
  ggtitle("Difference between estimated and theoretical K")
DiffK

r = K0$r[which.min(K0$un-K0$theo)]

# Keeping ties in splitting rules
t = spatcart(ypp, r)

# Optimizing ties in splitting rules
t = spatcart(ypp, r, ties = FALSE)

# Setting stopping rule for splitting
t = spatcart(ypp, r, minsplit = 50, minleaf = 25)
}
\references{
\emph{Spatial Classification Trees}, by A. Bar-Hen, S. Gey and J.-M. Poggi (2021).
}
