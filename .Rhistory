theme(axis.title.x = element_text(size=16))+
theme(axis.title.y = element_text(size=16))+
theme(plot.title = element_text(hjust = 0.5, size=16))
DiffK
# Maximal tree
# Initialize global variables for package
x = y = z = Specie = NULL
nuage = data.frame(ypp)
nuge
nuage
minsplit = 10
minleaf = 5
# Maximal tree
t = spattree(ypp, r, minsplit=minsplit,minleaf=minleaf)
a = t$tree
K = t$K[rownames(a$frame)][a$frame$var=="<leaf>"]
p1 = Paracou.plot(a,ypp,K)+
ggtitle("Paracou - SpatCART maximal tree")+
theme(plot.title = element_text(size=16))+
theme(legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
# Smallest probability tree
a = spatprune(t$tree)$opt.tree.min
K = t$K[rownames(a$frame)][a$frame$var=="<leaf>"]
p2 = Paracou.plot(a,ypp,K)+
ggtitle("Paracou - SpatCART class probability tree")+
theme(plot.title = element_text(size=16))+
theme(legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
# Smallest misclassification tree
a = spatprune(t$tree, method = "misclass")$opt.tree.min
K = t$K[rownames(a$frame)][a$frame$var=="<leaf>"]
p3 = Paracou.plot(a,ypp,K)+
ggtitle("Paracou - SpatCART classification tree")+
theme(plot.title = element_text(size=16))+
theme(legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
# Maximal tree
# Initialize global variables for package
x = y = z = Specie = NULL
nuage = data.frame(ypp)
colnames(nuage) = c("x","y", "Specie")
t = tree(Specie~.,data=nuage,split="gini",model=T, minsize=minsplit,mincut=minleaf)
a = t
p4 = ggplot(nuage, aes(x,y)) + geom_point(aes(x=x, y=y, shape=Specie)) +
scale_shape_manual(values=c(19, 0)) +
theme_bw() +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
xlab("") + ylab("") +
gg.partition.tree(a, label="Specie", color = "black", ordvars= c("x","y")) +
ggtitle("Paracou - CART maximal tree")+
theme(plot.title = element_text(size=16))+
theme(legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
p4 = p4+stat_contour(data=plot1.melt, aes(x = (x-1)*5, y = (y-1)*5, z = z), color="black")
p4 = p4+geom_text_contour(data=plot1.melt, aes(x = (x-1)*5, y = (y-1)*5, z=z))
# Smallest probabilty tree
seq_dev = prune.tree(t)
p3
p4
library(reshape2)
p4 = p4+geom_text_contour(data=plot1.melt, aes(x = (x-1)*5, y = (y-1)*5, z=z))
library(metR)
p4 = p4+geom_text_contour(data=plot1.melt, aes(x = (x-1)*5, y = (y-1)*5, z=z))
# Smallest probabilty tree
seq_dev = prune.tree(t)
nbleav = choice.tree(seq_dev)
alpha.maxgap = seq_dev$k[seq_dev$size==nbleav$maxgap]
alpha.plateau = seq_dev$k[seq_dev$size==nbleav$plateau]
plot(stepfun(seq_dev$k[-1],seq_dev$size), main=c("CART class probability trees", "Nb leaves vs complexity"), xlab="Complexity", ylab = "Number of leaves")
lines(c(alpha.maxgap,alpha.maxgap), c(0, nbleav$maxgap), type = "b", pch = 2, lty="dashed", col="blue")
lines(c(-30,alpha.maxgap), c(nbleav$maxgap, nbleav$maxgap), type = "b", pch = 2, lty="dashed", col="blue")
lines(c(alpha.plateau,alpha.plateau), c(0, nbleav$plateau), type = "b", pch = 8, lty="dotdash", col="red")
lines(c(-30,alpha.plateau), c(nbleav$plateau, nbleav$plateau), type = "b", pch = 8, lty="dotdash", col="red")
t_dev = prune.tree(t, best = nbleav$plateau)
a = t_dev
p5 = ggplot(nuage, aes(x,y)) + geom_point(aes(x=x, y=y, shape=Specie)) +
scale_shape_manual(values=c(19, 0)) +
theme_bw() +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
xlab("") + ylab("") +
gg.partition.tree(a, label="Specie", color = "black", ordvars= c("x","y")) +
ggtitle("Paracou - CART class probability tree")+
theme(plot.title = element_text(size=16))+
theme(legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
p5 = p5+stat_contour(data=plot1.melt, aes(x = (x-1)*5, y = (y-1)*5, z = z), color="black")
p5 = p5+geom_text_contour(data=plot1.melt, aes(x = (x-1)*5, y = (y-1)*5, z=z))
# Smallest misclassification tree
seq_mcr = prune.misclass(t)
nbleav = choice.tree(seq_mcr)
alpha.maxgap = seq_mcr$k[seq_mcr$size==nbleav$maxgap]
alpha.plateau = seq_mcr$k[seq_mcr$size==nbleav$plateau]
plot(stepfun(seq_mcr$k[-1],seq_mcr$size), main=c("CART classification trees", "Nb leaves vs complexity"), xlab="Complexity", ylab = "Number of leaves")
lines(c(alpha.maxgap,alpha.maxgap), c(0, nbleav$maxgap), type = "b", pch = 2, lty="dashed", col="blue")
lines(c(-30,alpha.maxgap), c(nbleav$maxgap, nbleav$maxgap), type = "b", pch = 2, lty="dashed", col="blue")
lines(c(alpha.plateau,alpha.plateau), c(0, nbleav$plateau), type = "b", pch = 8, lty="dotdash", col="red")
lines(c(-30,alpha.plateau), c(nbleav$plateau, nbleav$plateau), type = "b", pch = 8, lty="dotdash", col="red")
t_mcr = prune.misclass(t, best=nbleav$plateau)
a = t_mcr
p6 = ggplot(nuage, aes(x,y)) + geom_point(aes(x=x, y=y, shape=Specie)) +
scale_shape_manual(values=c(19, 0)) +
theme_bw() +
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
xlab("") + ylab("") +
gg.partition.tree(a, label="Specie", color = "black", ordvars= c("x","y")) +
ggtitle("Paracou - CART classification tree")+
theme(plot.title = element_text(size=16))+
theme(legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
p6 = p6+stat_contour(data=plot1.melt, aes(x = (x-1)*5, y = (y-1)*5, z = z), color="black")
p6 = p6+geom_text_contour(data=plot1.melt, aes(x = (x-1)*5, y = (y-1)*5, z=z))
install.packages("deldir")
library(spatcart)
Paracou(15)
library(spatcart)
?unique
library(spatcart)
library(spatcart)
Paracou(15)
library(spatstat)
hess = damier(500, h=0.45, model="Poisson")
ypp = ppp(x=chess$data$x1,
y=chess$data$x2,
marks = chess$data$label,
range(chess$data$x1),
range(chess$data$x2))
chess = damier(500, h=0.45, model="Poisson")
ypp = ppp(x=chess$data$x1,
y=chess$data$x2,
marks = chess$data$label,
range(chess$data$x1),
range(chess$data$x2))
major =  names(which.max(intensity(ypp)))
minor = names(which.min(intensity(ypp)))
K0=Kcross(ypp, major, minor, correction="none")
K01 = data.frame(
r = K0$r,
difference = K0$un-K0$theo
)
library(ggplot2)
DiffK = ggplot(K01, aes(x=r, y=difference))+geom_line()+xlab("r")+
ylab("Kest - Ktheo")+
ggtitle("Difference between estimated and theoretical K")
DiffK
r = K0$r[which.min(K0$un-K0$theo)]
# Keeping ties in splitting rules
t = spatcart(ypp, r)
# Optimizing ties in splitting rules
t = spatcart(ypp, r, ties = FALSE)
t = spatcart(ypp, r, minsplit = 50, minleaf = 25)
ypp = Paracoudata()
t = spattree(ypp, 15)
t = spattree(ypp, 15, ties = FALSE)
t = spattree(ypp, 15, minsplit = 20, minleaf = 10)
ypp = Paracoudata()
r = 15
t = spatcart(ypp, r, graph = FALSE)
a = t$opt.tree.min
K = t$K[rownames(a$frame)][a$frame$var=="<leaf>"]
partition.spattree(a, ypp, K)
grille = make.grid(a,ypp,K,d)$grid
d = 100
grille = make.grid(a,ypp,K,d)$grid
# Initialize global variables for package
pointsx = pointsy = Mark = NULL
x = y = Interaction = NULL
grille = make.grid(a,ypp,K,d)$grid
nuage = tibble(
pointsx = ypp$x,
pointsy = ypp$y,
Mark = ypp$marks
)
library(dplyr)
library(ggplot2)
nuage = tibble(
pointsx = ypp$x,
pointsy = ypp$y,
Mark = ypp$marks
)
nuage
length(K)
p = ggplot(grille, aes(x,y, z=Interaction)) + geom_tile(aes(fill = Interaction)) +
scale_fill_gradient(low="white", high="grey") +
geom_point(data = nuage, mapping = aes(pointsx, pointsy, shape = Mark), inherit.aes = FALSE) +
scale_shape_manual(breaks = ypp$marks, values=c(19, 0)) +
theme_bw() + xlab("") + ylab("") +
gg.partition.tree(a, label="marks", color = "black", ordvars= c("x","y"))
p
nuage %>% is.na %>% sum()
nuage %>% filter(Mark == "Vouacapoua")
pmax = ggplot(grille, aes(x,y, z=Interaction)) + geom_tile(aes(fill = Interaction)) +
scale_fill_gradient(low="white", high="grey") +
geom_point(data = nuage, mapping = aes(pointsx, pointsy, shape = Mark), inherit.aes = FALSE) +
scale_shape_manual(breaks = levels(ypp$marks), values=c(19, 0)) +
theme_bw() + xlab("") + ylab("") +
gg.partition.tree(a, label="marks", color = "black", ordvars= c("x","y"))+
ggtitle("SpatCART maximal tree")+
theme(plot.title = element_text(size=16))+
theme(legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
pmax
p = ggplot(grille, aes(x,y, z=Interaction)) + geom_tile(aes(fill = Interaction)) +
scale_fill_gradient(low="white", high="grey") +
geom_point(data = nuage, mapping = aes(pointsx, pointsy, shape = Mark), inherit.aes = FALSE) +
scale_shape_manual(breaks = ypp$marks, values=c(19, 0)) +
theme_bw() + xlab("") + ylab("") +
gg.partition.tree(a, label="marks", color = "black", ordvars= c("x","y"))
p
p = ggplot(grille, aes(x,y, z=Interaction)) + geom_tile(aes(fill = Interaction)) +
scale_fill_gradient(low="white", high="grey") +
geom_point(data = nuage, mapping = aes(pointsx, pointsy, shape = Mark), inherit.aes = FALSE) +
scale_shape_manual(breaks = levels(ypp$marks), values=c(19, 0)) +
theme_bw() + xlab("") + ylab("") +
gg.partition.tree(a, label="marks", color = "black", ordvars= c("x","y"))
p
getwd()
usethis :: use_package("utils")
?globalVariables
library(spatcart)
library(spatstat)
# Simulate spatial bivariate marked point process
chess = damier(500, h=0.45, model="Poisson")
ypp = ppp(x=chess$data$x1,
y=chess$data$x2,
marks = chess$data$label,
range(chess$data$x1),
range(chess$data$x2))
# Checking initial resolution to construct maximal tree via Ripley's Kcross
major =  names(which.max(intensity(ypp)))
minor = names(which.min(intensity(ypp)))
K0=Kcross(ypp, major, minor, correction="none")
K01 = data.frame(
r = K0$r,
difference = K0$un-K0$theo
)
library(ggplot2)
DiffK = ggplot(K01, aes(x=r, y=difference))+geom_line()+xlab("r")+
ylab("Kest - Ktheo")+
ggtitle("Difference between estimated and theoretical K")
DiffK
r = K0$r[which.min(K0$un-K0$theo)]
# Keeping ties in splitting rules
t = spatcart(ypp, r)
# Loading Paracou data set
ypp = Paracoudata()
r = 15
t = spatcart(ypp, r, graph = FALSE)
a = t$opt.tree.min
K = t$K[rownames(a$frame)][a$frame$var=="<leaf>"]
partition.spattree(a, ypp, K)
library(tree)
t = tree(Species~., data = iris)
seq = prune.misclass(t)
choice.tree(seq)
tmax = tree(Species~Sepal.Length+Petal.Length, data = iris)
t = prune.misclass(tmax, best = 3)
library(dplyr)
library(ggplot2)
iris %>% select(Sepal.Length, Petal.Length, Species) %>%
ggplot(aes(Sepal.Length, Petal.Length, color = Species))+geom_point()+
gg.partition.tree(t)
Paracou()15
Paracou(15)
t = tree(Species~., data = iris)
pruned = spatprune(t)
pruned$pruned.seq
t = tree(Species~Sepal.Length+Petal.Length, data = iris)
pruned = spatprune(t)
library(spatcart)
library(spatcart)
library(tree)
t = tree(Species~Sepal.Length+Petal.Length, data = iris)
t = tree(Species~., data = iris)
b = predict(t, newdata = iris, type = "where")
class(b)
b
tibble(b)
unique(b)
tibble(as.character(b))
library(spatcart)
Paracou(15)
tmax = tree(Species~Sepal.Length+Petal.Length, data = iris)
t = prune.misclass(tmax, best = 3)
library(dplyr)
library(ggplot2)
iris %>% select(Sepal.Length, Petal.Length, Species) %>%
ggplot(aes(Sepal.Length, Petal.Length, color = Species))+geom_point()+
gg.partition.tree(t)
# Loading Paracou spatial bivariate point process
ypp = Paracoudata()
# SpatCART trees
t = spatcart(ypp, 15, graph = FALSE)
a = t$opt.tree.min
K = t$K[rownames(a$frame)][a$frame$var=="<leaf>"]
Paracou.plot(a,ypp,K)
# Loading Paracou data set
ypp = Paracoudata()
r = 15
t = spatcart(ypp, r, graph = FALSE)
a = t$opt.tree.min
K = t$K[rownames(a$frame)][a$frame$var=="<leaf>"]
partition.spattree(a, ypp, K)
repulsion(1000, 0.05)
repulsion(1000, 0.1, h = 0.1)
damier(1000, model = "unif")
damier(1000, model = "unif", h = 0.1)
damier(1000, model = "Poisson")
library(spatstat)
# Simulate spatial bivariate marked point process
chess = damier(500, h=0.45, model="Poisson")
ypp = ppp(x=chess$data$x1,
y=chess$data$x2,
marks = chess$data$label,
range(chess$data$x1),
range(chess$data$x2))
# Checking initial resolution to construct maximal tree via Ripley's Kcross
major =  names(which.max(intensity(ypp)))
minor = names(which.min(intensity(ypp)))
K0=Kcross(ypp, major, minor, correction="none")
K01 = data.frame(
r = K0$r,
difference = K0$un-K0$theo
)
library(ggplot2)
DiffK = ggplot(K01, aes(x=r, y=difference))+geom_line()+xlab("r")+
ylab("Kest - Ktheo")+
ggtitle("Difference between estimated and theoretical K")
DiffK
r = K0$r[which.min(K0$un-K0$theo)]
# Keeping ties in splitting rules
t = spatcart(ypp, r)
t = spatcart(ypp, r, ties = FALSE)
t = spatcart(ypp, r, minsplit = 50, minleaf = 25)
library(tree)
t = tree(Species~Sepal.Length+Petal.Length, data = iris)
pruned = spatprune(t)
ypp = Paracoudata()
# Keeping ties in splitting rules
t = spattree(ypp, 15)
# optimizing ties in splitting rules
t = spattree(ypp, 15, ties = FALSE)
# Changing stopping rule for splitting
t = spattree(ypp, 15, minsplit = 20, minleaf = 10)
?install.packages
setwd("~/Documents/Pro/Recherche/Articles/Supervise/Spatial_Cart")
install.packages("spatcart")
install.packages("spatcart")
install.packages("spatcart")
devtools::install_github("Servane-Gey/spatcart")
devtools::install_github("Servane-Gey/spatcart/spatcart.zip")
devtools::install_github("Servane-Gey/spatcart_0.0.0.9000.tgz")
devtools::install_github("Servane-Gey/spatcart/spatcart_0.0.0.9000.tgz")
devtools::install_github("Servane-Gey/spatcart/spatcart_0.0.0.9000.tar.gz")
setwd()
getwd()
install.packages("spatcart_0.0.0.9000.tgz")
install.packages("spatcart_0.0.0.9000.tar.gz")
library(dextools)
library(devtools)
devtools::install_github("Servane-Gey/spatcart")
devtools::install_github("Servane-Gey/spatcart")
devtools::install_github("Servane-Gey/spatcart")
library(spatcart)
install.packages(c("colorspace", "deldir", "rstudioapi", "spatstat.data"))
install.packages(c("colorspace", "deldir", "rstudioapi", "spatstat.data"))
?spatcart
library(spatcart)
?spatcart
library(spatcart)
chess = damier(1000)
names(chess)
str(chess$data)
nuage = data.frame(
x = chess$data$x1,
y = chess$data$x2,
Mark = chess$data$label
)
nuage
tmax = tree(Mark~.,data=nuage,split="gini",model=T, minsize=100,mincut=50)
library(tree)
tmax = tree(Mark~.,data=nuage,split="gini",model=T, minsize=100,mincut=50)
seq = spatprune(tmax, method = "misclass")
t = seq$opt.tree.min # selects smallest optimal subtree
nuage %>% ggplot(aes(x,y, color = Mark))+geom_point()+
gg.partition.tree(t)+
labs(x = "", y = "")
library(dplyr)
library(ggplot2)
nuage %>% ggplot(aes(x,y, color = Mark))+geom_point()+
gg.partition.tree(t)+
labs(x = "", y = "")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(spatcart)
library(spatstat)
ypp = ants
ypp
library(dplyr)
library(ggplot2)
major =  names(which.max(intensity(ypp)))
minor = names(which.min(intensity(ypp)))
K0 = Kcross(ypp, major, minor, correction="none")
K01 = tibble(
scale = K0$r,
difference = K0$un-K0$theo
)
ggplot(K01, aes(x=scale, y=difference))+geom_line()+xlab("r")+
ylab("Kest - Ktheo")+
ggtitle("Difference between estimated and theoretical K")+
theme(axis.title.x = element_text(size=14))+
theme(axis.title.y = element_text(size=14))+
theme(plot.title = element_text(hjust = 0.5, size=14))
zone = which(K0$r>=150 & K0$r<=170)
r1 = K0$r[zone]
r0 = r1[which.min((K0$un-K0$theo)[zone])]
r0
t = spatcart(ypp, r0)
tmax = spattree(ypp, r0)
seq = spatprune(tmax)
seq = spatprune(tmax)
seq = spatprune(tmax)
set.seed(12)
chess = damier(1000)
chess = damier(1000, h=0.45,  model = "Poisson")
repuls = repulsion(1000, 0.05)
nuage = data.frame(
x = chess$data$x1,
y = chess$data$x2,
Mark = chess$data$label
)
library(tree)
tmax = tree(Mark~.,data=nuage,split="gini",model=T, minsize=100,mincut=50)
seq = spatprune(tmax, method = "misclass")
t = seq$opt.tree.min # selects smallest optimal subtree
nuage %>% ggplot(aes(x,y, color = Mark))+geom_point()+
gg.partition.tree(t)+
labs(x = "", y = "")
donnees = chess$data
# Define data as a point process with spatstat
ypp = ppp(x=donnees$x1, y=donnees$x2, marks = donnees$label,
range(donnees$x1), range(donnees$x2))
##### CART
donnees2=data.frame(ypp)
t = tree(marks~.,data=donnees2,split="gini",model=T, minsize=minsplit,mincut=minleaf)
minsplit = 50
minleaf = 25
levels(nuage$Mark)
?scale_color_manual
ypp = ants
major =  names(which.max(intensity(ypp)))
minor = names(which.min(intensity(ypp)))
K0 = Kcross(ypp, major, minor, correction="none")
K01 = tibble(
scale = K0$r,
difference = K0$un-K0$theo
)
plot(K0)
setwd("~/Dropbox/Spatial_Cart/Programmes")
plot1 = altitude[[1]]
altitude = dget("altitude-grid.R")
plot1 = altitude[[1]]
View(plot1)
plot1.melt <- melt(plot1$z)
library(spatstat)
library(tree)
library(ggplot2)
library(reshape2)
plot1.melt <- melt(plot1$z)
View(plot1.melt)
names(plot1.melt) <- c("x","y","z")
plot2.melt = plot1.melt %>% filter(!is.na(z))
mouamba <- read.table("../Donnees/mouamba-plot1.txt", header=T)
wacapou <- read.table("../Donnees/wacapou-plot1.txt", header = T)
n1 = nrow(mouamba)
n2 = nrow(wacapou)
forest <- rbind(data.frame(x=mouamba$x,y=mouamba$y, mark = as.factor(rep("Oxandra", n1))),data.frame(x=wacapou$x,y=wacapou$y, mark = as.factor(rep("Vouacapoua", n2))))
w0 <- owin(c(0,250),c(0,250))
ypp = ppp(x=forest$x,y=forest$y,marks=forest$mark,window=w0)
plot(ypp)
nuage = tibble()
nuage = tibble()
nuage = tibble(x = ypp$x, y = ypp$y, Specie = ypp$marks)
p = ggplot(nuage, aes(x,y)) + geom_point(aes(x=x, y=y, shape=Specie)) + scale_shape_manual(values=c(19, 0)) + theme_bw() + theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) + xlab("") + ylab("")
p = p+stat_contour(data=plot1.melt, aes(x = (x-1)*5, y = (y-1)*5, z = z), color="black")
library(metR)
p = p+geom_text_contour(data=plot1.melt, aes(x = (x-1)*5, y = (y-1)*5, z=z))
p
p = ggplot(nuage, aes(x,y)) + geom_point(aes(x=x, y=y, shape=Specie)) + scale_shape_manual(values=c(19, 0)) + theme_bw() + theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) + xlab("") + ylab("")
p = p+stat_contour(data=plot2.melt, aes(x = (x-1)*5, y = (y-1)*5, z = z), color="black")
p = p+geom_text_contour(data=plot2.melt, aes(x = (x-1)*5, y = (y-1)*5, z=z))
p
plot1.melt = plot2.melt
save(plot1.melt, file = "Paracou/altitude_Paracou.RData")
Paracou.pp = ypp
Paracou.pp
save(Paracou.pp, file = "Paracou/pp_Paracou.RData")
setwd("~/Dropbox/Spatial_Cart/spatcart/R")
load("altitude_Paracou.RData")
load("pp_Paracou.RData")
devtools::use_data(Paracou.pp, plot1.melt, internal = TRUE)
usethis::use_data(Paracou.pp, plot1.melt, internal = TRUE)
pkgbuild::check_build_tools(debug = TRUE)
install.packages(c("ellipse", "ggplot2", "gt", "igraph", "labelled", "lattice", "markdown", "Matrix", "multcompView", "prodlim", "ps", "quantreg", "rcompanion", "RcppArmadillo", "terra", "V8"))
library(devtools)
library(spatcart)
library(spatstat)
Paracou(15)
library(spatcart)
Paracou(15)
